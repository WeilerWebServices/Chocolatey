<?xml version="1.0" encoding="utf-8"?>
<project name="CUSTOM POST OPENCOVER.COVER" default="go">
  <!-- Project UppercuT - http://projectuppercut.org -->
  <property name="build.config.settings" value="__NONE__" overwrite="false" />
  <include buildfile="${build.config.settings}" if="${file::exists(build.config.settings)}" />
  <property name="path.separator" value="${string::trim(path::combine(' ', ' '))}" />
  <property name="dirs.current" value="${directory::get-current-directory()}" />
  <property name="dirs.current.file" value="${directory::get-parent-directory(project::get-buildfile-path())}" />
  <property name="folder.build_scripts" value="build" overwrite="false" />
  <include buildfile="${dirs.current}${path.separator}${folder.build_scripts}${path.separator}default.build.settings" />
  <property name="build.step.name" value="${project::get-name()}" />
  <property name="build.step.path" value="${project::get-buildfile-path()}" />
  <!-- build step customizations below this -->

  <target name="go" depends="run_normal_tasks" />

  <target name="run_normal_tasks">
    <echo level="Warning" message="Uploading Code Coverage Results to Coveralls if ENV['COVERALS_REPO_TOKEN'] is set." />
    <call target="run_coveralls" if="${environment::variable-exists('COVERALLS_REPO_TOKEN')}" />
  </target>

  <target name="run_coveralls" if="${environment::variable-exists('COVERALLS_REPO_TOKEN')}">
    <echo level="Warning" message="Running ${app.coveralls} --opencover '${dirs.codecoverage_results}${path.separator}${file.codecoverage_results}'" />
    <exec program="${app.coveralls}"
          workingdir="${dirs.codecoverage_results}"
          failonerror="false"
          if="${platform::is-windows()}"
          >
      <arg value='--opencover' />
      <arg value='"${dirs.codecoverage_results}${path.separator}${file.codecoverage_results}"' />
    </exec>
    <exec program="mono"
          workingdir="${dirs.codecoverage_results}"
          failonerror="false"
          if="${platform::is-unix()}"
          >
      <arg value='"${app.coveralls}"' />
      <arg value='--opencover' />
      <arg value='"${dirs.codecoverage_results}${path.separator}${file.codecoverage_results}"' />
    </exec>
  </target>
</project>
