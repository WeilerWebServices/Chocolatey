@* Generator: MvcHelper Namespace: NuGetGallery*@

@using System.Configuration
@using System.Linq;
@using System.Collections;
@using System.Web;
@using System.Web.Mvc;
@using Microsoft.Web.Helpers;
@using NuGetGallery;
@using NuGetGallery.MvcOverrides

@helper PreviousNextPager(IPreviousNextPager pager) {
    if (pager.HasNextPage || pager.HasPreviousPage) {
        <ul class="pager mt-3 mb-0 p-0 list-unstyled text-center h5 list-inline">
            <li class="previous list-inline-item pr-3 mr-0">
                @if (pager.HasPreviousPage)
                {
                    <a href="@pager.PreviousPageUrl" title="Go to the previous page.">Previous</a>
                }
                else
                {
                    <span class="text-muted" title="No previous pages.">Previous</span>
                }
            </li>
            <li class="next list-inline-item pl-2">
                @if (pager.HasNextPage)
                {
                    <a href="@pager.NextPageUrl" title="Go to the next page.">Next</a>
                }
                else
                {
                    <span class="text-muted" title="No further pages">Next</span>
                }
            </li>
        </ul>
    }
}

@helper Option(string value, string label, string currentValue) {
    <option value="@value" @if (value == currentValue) {<text>selected="selected"</text>}>@label</option>    
}

@helper OwnersGravatar(IEnumerable<User> owners, int size, UrlHelper url, bool showName = true) {
    <ul class="list-unstyled mb-2 mb-md-0">
    @foreach (var owner in owners) {
        <li>
            @ViewHelpers.OwnerGravatar(owner, size, url, showName)
        </li>
    }  
    </ul>  
}

@helper OwnerGravatar(User owner, int size, UrlHelper url, bool showName = true) {
    <a class="d-flex align-items-center mb-2" href="@url.Action(MVC.Users.Profiles(owner.Username))" title="@owner.Username">
        @if(!string.IsNullOrEmpty(owner.EmailAddress)) { @GravatarImage(owner.EmailAddress, owner.Username, size) }
        @if (showName) {
            <span class="ml-2">@owner.Username</span>
        }
    </a>
}

@helper OwnersGravatarListPackages(IEnumerable<User> owners, int size, UrlHelper url) {
    <ul class="list-unstyled list-inline mb-0">
    @foreach (var owner in owners) {
        <li class="list-inline-item">
            <a href="@url.Action(MVC.Users.Profiles(owner.Username))" title="@owner.Username">
                @if (!string.IsNullOrEmpty(owner.EmailAddress))
                {@GravatarImage(owner.EmailAddress, owner.Username, size)}
            </a>
        </li>
    }  
    </ul>  
}

@helper GravatarImage(string email, string username, int size) {
    if (string.IsNullOrWhiteSpace(email)) {email = "default";}
    var gravatarHtml = Gravatar.GetHtml(email, size, "retro", GravatarRating.G, attributes: new { width = size, height = size, title = username, @class = "rounded-circle" });
    if (gravatarHtml != null && AppHarbor.IsSecureConnection(new HttpContextWrapper(HttpContext.Current)))
    {
        gravatarHtml = new HtmlString(gravatarHtml.ToHtmlString().Replace("http://www.gravatar.com/", "https://secure.gravatar.com/"));
    }
    @gravatarHtml
}